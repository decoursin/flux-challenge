;; Analyzed by ClojureScript 1.7.189
{:use-macros {reaction reagent.ratom}, :excludes #{}, :name decoursin.subs, :imports nil, :requires {decoursin.deque decoursin.deque, re-frame re-frame.core, re-frame.core re-frame.core, s schema.core, schema.core schema.core}, :uses {new-deque decoursin.deque}, :defs {is-a-sith? {:protocol-inline nil, :meta {:file "/home/nick/Working/flux-challenge/src/decoursin/subs.cljs", :line 20, :column 8, :end-line 20, :end-column 18, :private true, :arglists (quote ([sith])), :doc "if the sith's :name is not the empty string,\n   then s/he is a sith"}, :private true, :name decoursin.subs/is-a-sith?, :variadic false, :file "/home/nick/Working/flux-challenge/src/decoursin/subs.cljs", :end-column 18, :method-params ([sith]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sith])), :doc "if the sith's :name is not the empty string,\n   then s/he is a sith"}, has-no-apprentice? {:protocol-inline nil, :meta {:file "/home/nick/Working/flux-challenge/src/decoursin/subs.cljs", :line 26, :column 8, :end-line 26, :end-column 26, :private true, :arglists (quote ([sith])), :doc "Does this sith have an apprentice? The bottom most one doesn't"}, :private true, :name decoursin.subs/has-no-apprentice?, :variadic false, :file "/home/nick/Working/flux-challenge/src/decoursin/subs.cljs", :end-column 26, :method-params ([sith]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sith])), :doc "Does this sith have an apprentice? The bottom most one doesn't"}, has-no-master? {:protocol-inline nil, :meta {:file "/home/nick/Working/flux-challenge/src/decoursin/subs.cljs", :line 31, :column 8, :end-line 31, :end-column 22, :private true, :arglists (quote ([sith])), :doc "Does this sith a have a master? The top most one doesn't"}, :private true, :name decoursin.subs/has-no-master?, :variadic false, :file "/home/nick/Working/flux-challenge/src/decoursin/subs.cljs", :end-column 22, :method-params ([sith]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sith])), :doc "Does this sith a have a master? The top most one doesn't"}, sith-without-apprentice? {:protocol-inline nil, :meta {:file "/home/nick/Working/flux-challenge/src/decoursin/subs.cljs", :line 36, :column 16, :end-line 36, :end-column 40, :private true}, :private true, :name decoursin.subs/sith-without-apprentice?, :variadic false, :file "/home/nick/Working/flux-challenge/src/decoursin/subs.cljs", :end-column 40, :method-params ([sith]), :protocol-impl nil, :arglists-meta (), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists nil}, sith-without-master? {:protocol-inline nil, :meta {:file "/home/nick/Working/flux-challenge/src/decoursin/subs.cljs", :line 37, :column 16, :end-line 37, :end-column 36, :private true}, :private true, :name decoursin.subs/sith-without-master?, :variadic false, :file "/home/nick/Working/flux-challenge/src/decoursin/subs.cljs", :end-column 36, :method-params ([sith]), :protocol-impl nil, :arglists-meta (), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists nil}}, :require-macros {reagent.ratom reagent.ratom, s schema.core, schema.core schema.core}, :cljs.analyzer/constants {:seen #{:siths :name :disable-down-button? :planet :apprentice :id :master :obi-wan-is-here :disable-up-button?}, :order [:siths :planet :name :apprentice :id :master :disable-up-button? :obi-wan-is-here :disable-down-button?]}, :doc nil}